{-
Используя однократный вызов свертки, реализуйте функцию evenOnly, которая выбрасывает из списка элементы, стоящие на нечетных местах, оставляя только четные.

GHCi> evenOnly [1..10]
[2,4,6,8,10]
GHCi> evenOnly ['a'..'z']
"bdfhjlnprtvxz"
-}

module Demo where

evenOnly :: [a] -> [a]
evenOnly = (foldr (\(a,b) y -> if (even a) then b:y else y) []) . foo
foo xs = zipWith (,) [1..(length xs)] xs

{-
Попробуйте добиться того, чтобы реализованная вами в прошлом задании функция evenOnly позволяла работать и с бесконечными списками.
То есть, например, запрос на первые три элемента бесконечного списка, возвращаемого этой функцией, примененной к списку всех натуральных чисел, должен завершаться:

GHCi> take 3 (evenOnly [1..])
[2,4,6]
-}

evenOnly' :: [a] -> [a]
evenOnly' xs = bar xs 1
bar [] _ = []
bar (x:xs) c = if (even c) then x:(bar xs (c+1)) else (bar xs (c+1))
